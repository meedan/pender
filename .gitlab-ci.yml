stages:
  - test
  - build_qa
  - deploy_qa
#  - build_live
#  - deploy_live

test:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: test
  script:
    - apk add --no-cache curl wget git py-pip
    - pip install docker-compose==1.23.2
    - git clone -b feature/7591-s3-store https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/travis/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker-compose build
    - docker-compose -f docker-compose.yml -f docker-test.yml up -d
    # - wget -q --waitretry=5 --retry-connrefused -t 20 -T 10 -O - http://localhost:3200
    - docker-compose exec -T pender test/setup-parallel
    - docker-compose exec -T  pender bundle exec rake "parallel:test[3]"
    - docker-compose exec -T pender cat tmp/performance.csv
build_qa:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build_qa
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/qa/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker build  -f Dockerfile.production -t "$QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"  .
    - docker push "$QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - develop

deploy_qa:
  image: python:3-alpine
  stage: deploy_qa
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install ecs-deploy==1.7.0
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - source configurator/check/qa/pender/config/.env
    - ecs deploy ecs-qa  qa-pender --image qa-pender-c $QA_ECR_API_BASE_URL:$CI_COMMIT_SHA -e qa-pender-c REDIS_HOST $REDIS_HOST -e qa-pender-c REDIS_PORT $REDIS_PORT -e qa-pender-c REDIS_DATABASE $REDIS_DATABASE -e qa-pender-c COOKIES $COOKIES -e qa-pender-c CACHE_DIR $CACHE_DIR -e qa-pender-c SCREENSHOTS_DIR $SCREENSHOTS_DIR  --timeout -1
    - echo "new Image was deployed $QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - develop