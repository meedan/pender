stages:
  - test
  - build
  - deploy


test_all:
  image: docker:latest
  allow_failure: true
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: test
  script:
    - apk add --no-cache curl wget git py-pip
    - pip install docker-compose==1.23.2
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/travis/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker-compose build
    - docker-compose -f docker-compose.yml -f docker-test.yml up -d
    # - wget -q --waitretry=5 --retry-connrefused -t 20 -T 10 -O - http://localhost:3200
    - docker-compose exec -T pender test/setup-parallel
    - docker-compose exec -T  pender bundle exec rake "parallel:test[3]"
    - docker-compose exec -T pender cat tmp/performance.csv
  except:
    - master

#test:
#  image: docker:latest
#  allow_failure: false
#  services:
#    - docker:dind
#  tags:
#    - meedan
#    - meedan-labs
#  stage: test
#  script:
#    - apk add --no-cache curl wget git py-pip
#    - pip install docker-compose==1.23.2
#    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
#    - d=configurator/check/travis/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
#    - docker-compose build
#    - docker-compose -f docker-compose.yml -f docker-test.yml up -d
#    # - wget -q --waitretry=5 --retry-connrefused -t 20 -T 10 -O - http://localhost:3200
#    - docker-compose exec -T pender test/setup-parallel
#    - docker-compose exec -T  pender bundle exec rake "parallel:test[3]"
#    - docker-compose exec -T pender cat tmp/performance.csv
#  only:
#    - master

build_qa:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install docutils==0.14
    - pip install awscli==1.16.201
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/qa/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker build  -f Dockerfile.production.aws -t "$ECR_API_BASE_URL/qa/pender/api:$CI_COMMIT_SHA"  .
    - docker push "$ECR_API_BASE_URL/qa/pender/api:$CI_COMMIT_SHA"
  only:
    - develop

deploy_qa:
  image: python:3-alpine
  stage: deploy
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install ecs-deploy==1.7.0
    - ecs deploy ecs-qa  qa-pender --image qa-pender-c $ECR_API_BASE_URL/qa/pender/api:$CI_COMMIT_SHA  --timeout 3600
    - ecs deploy ecs-qa  qa-pender-background --image qa-pender-background $ECR_API_BASE_URL/qa/pender/api:$CI_COMMIT_SHA  --timeout 3600
    - echo "new Image was deployed $ECR_API_BASE_URL/qa/pender/api:$CI_COMMIT_SHA"
  only:
    - develop

build_live:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install docutils==0.14
    - pip install awscli==1.16.201
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/live/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker build  -f Dockerfile.production.aws -t "$ECR_API_BASE_URL/live/pender/api:$CI_COMMIT_SHA"  .
    - docker push "$ECR_API_BASE_URL/live/pender/api:$CI_COMMIT_SHA"
  only:
    - master


deploy_live:
  image: python:3-alpine
  stage: deploy
  when: manual
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install ecs-deploy==1.7.0
    - ecs deploy ecs-live  live-pender --image live-pender-c $ECR_API_BASE_URL/live/pender/api:$CI_COMMIT_SHA  --timeout 3600
    - ecs deploy ecs-live  live-pender-background --image live-pender-background $ECR_API_BASE_URL/live/pender/api:$CI_COMMIT_SHA  --timeout 3600
    - echo "new Image was deployed $ECR_API_BASE_URL/live/pender/api:$CI_COMMIT_SHA"
  only:
    - master